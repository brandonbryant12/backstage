---
# Main Application
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: example
  description: An example of a Backstage application.
  annotations:
    github.com/project-slug: example/example-app
    backstage.io/techdocs-ref: dir:.
  tags:
    - typescript
    - web
spec:
  type: website
  owner: team-a
  lifecycle: experimental
  system: example-system
  dependsOn:
    - resource:example-db
    - component:auth-service
---
# Database
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: example-db
  description: Main application database
  annotations:
    backstage.io/managed-by: aws
spec:
  type: database
  owner: team-a
  system: example-system
---
# Auth Service
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: auth-service
  description: Authentication service
  annotations:
    github.com/project-slug: example/auth-service
spec:
  type: service
  lifecycle: production
  owner: team-b
  system: example-system
---
# Team A
apiVersion: backstage.io/v1alpha1
kind: Group
metadata:
  name: team-a
  description: Frontend Development Team
spec:
  type: team
  profile:
    displayName: Team A
    email: team-a@example.com
  parent: engineering
  children: []
  members: 
    - john@example.com
    - jane@example.com
---
# Team B
apiVersion: backstage.io/v1alpha1
kind: Group
metadata:
  name: team-b
  description: Backend Development Team
spec:
  type: team
  profile:
    displayName: Team B
    email: team-b@example.com
  parent: engineering
  children: []
  members: 
    - alice@example.com
    - bob@example.com
---
# Engineering Department
apiVersion: backstage.io/v1alpha1
kind: Group
metadata:
  name: engineering
  description: Engineering Department
spec:
  type: department
  profile:
    displayName: Engineering
    email: engineering@example.com
  parent: org
  children: 
    - team-a
    - team-b
---
# API
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: example-api
  description: Example REST API
  tags:
    - rest
    - api
spec:
  type: openapi
  lifecycle: production
  owner: team-b
  definition:
    $text: https://example.com/api-spec.yaml
---
# Documentation
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: example-system
  description: Example System
spec:
  owner: engineering
  domain: business-domain
---
# Frontend Web App
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: frontend-web
  description: Main web application frontend
  annotations:
    github.com/project-slug: example/frontend-web
    backstage.io/techdocs-ref: dir:.
  tags:
    - react
    - typescript
    - web
spec:
  type: frontend
  lifecycle: production
  owner: team-a
  system: example-system
  dependsOn:
    - component:auth-service
    - component:api-gateway
---
# API Gateway
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: api-gateway
  description: API Gateway service
  annotations:
    github.com/project-slug: example/api-gateway
  tags:
    - golang
    - gateway
spec:
  type: service
  lifecycle: production
  owner: team-b
  system: example-system
  dependsOn:
    - component:auth-service
    - component:user-service
    - component:notification-service
---
# User Service
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: user-service
  description: User management microservice
  annotations:
    github.com/project-slug: example/user-service
  tags:
    - nodejs
    - microservice
spec:
  type: service
  lifecycle: production
  owner: team-b
  system: example-system
  dependsOn:
    - resource:user-db
---
# User Database
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: user-db
  description: User service database
  annotations:
    backstage.io/managed-by: aws
spec:
  type: database
  owner: team-b
  system: example-system
---
# Notification Service
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: notification-service
  description: Email and push notification service
  annotations:
    github.com/project-slug: example/notification-service
  tags:
    - python
    - microservice
spec:
  type: service
  lifecycle: production
  owner: team-b
  system: example-system
  dependsOn:
    - resource:notification-queue
    - resource:notification-db
---
# Notification Queue
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: notification-queue
  description: Message queue for notifications
  annotations:
    backstage.io/managed-by: aws
spec:
  type: messaging
  owner: team-b
  system: example-system
---
# Notification Database
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: notification-db
  description: Notification service database
  annotations:
    backstage.io/managed-by: aws
spec:
  type: database
  owner: team-b
  system: example-system
